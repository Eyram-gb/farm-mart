/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    FarmMart: {
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "orderId",
              type: "uint256",
            },
          ],
          name: "BuyerConfirmed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "orderId",
              type: "uint256",
            },
          ],
          name: "FarmerConfirmed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "farmer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "produce",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "unit",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "unitPrice",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "available",
              type: "uint256",
            },
          ],
          name: "Listed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "orderId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "quantity",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "totalPrice",
              type: "uint256",
            },
          ],
          name: "OrderCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "orderId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Refunded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "orderId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Released",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "unitPrice",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "available",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "active",
              type: "bool",
            },
          ],
          name: "Updated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "quantity",
              type: "uint256",
            },
          ],
          name: "buy",
          outputs: [
            {
              internalType: "uint256",
              name: "orderId",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "orderId",
              type: "uint256",
            },
          ],
          name: "confirmReceived",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "orderId",
              type: "uint256",
            },
          ],
          name: "confirmSent",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_productID",
              type: "string",
            },
          ],
          name: "getHash",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "produce",
              type: "string",
            },
            {
              internalType: "string",
              name: "unit",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "unitPrice",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "available",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "metadata",
              type: "string",
            },
          ],
          name: "list",
          outputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "listings",
          outputs: [
            {
              internalType: "address payable",
              name: "farmer",
              type: "address",
            },
            {
              internalType: "string",
              name: "produce",
              type: "string",
            },
            {
              internalType: "string",
              name: "unit",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "unitPrice",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "available",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "active",
              type: "bool",
            },
            {
              internalType: "string",
              name: "metadata",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "orders",
          outputs: [
            {
              internalType: "uint256",
              name: "listingId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "quantity",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalPrice",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "farmerConfirmed",
              type: "bool",
            },
            {
              internalType: "bool",
              name: "buyerConfirmed",
              type: "bool",
            },
            {
              internalType: "bool",
              name: "released",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "newUnitPrice",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "newAvailable",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "active",
              type: "bool",
            },
          ],
          name: "update",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 1,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
